data %>% group_by(speaker, aspiration) %>%
ggplot(aes(fill = aspiration, color = aspiration)) +
geom_qq(aes(sample=vowel.dur)) + facet_wrap(~speaker, scale = "free")
t.test(s.duration.ms~orientation, data=filter(data, speaker=='brs02'))
t.test(data=filter(data, speaker=='brs02'))
t.test(vowel.dur ~ aspiration, data=filter(data, speaker=='brs02'))
t.test(vowel.dur ~ aspiration, data=filter(data, speaker=='brs03'))
t.test(vowel.dur ~ aspiration, data=filter(data, speaker=='bte03'))
t.test(vowel.dur ~ aspiration, data=filter(data, speaker=='jj04'))
library(lsr)
cohensD()
data1 <- filter(data, speaker=='brs02')
cohensD(data1$vowel.dur, data1$aspiration)
cohensD(vowel.dur~aspiration, data=filter(data, speaker=='bte03'))
cohensD(vowel.dur~aspiration, data=filter(data, speaker=='brs02'))
data_vel = read.csv('http://goo.gl/aE3yVg')
group_by(v.elision, position) %>%  summarise(number = n())
group_by(data_vel,v.elision, position) %>%  summarise(number = n())
```{r}
library(tidyverse)
data_vel = read.csv('http://goo.gl/aE3yVg')
### Задание 2.2 - trim не полностью работает###
geom_histogram(aes(fill=vowel), binwidth=nclass.FD(data_voc$length))+
data_voc <- data_voc[,c(1, 5, 6)]
packageVersion("ggplot2")
install.packages("ggplot2")
packageVersion("ggplot2")
data_voc <- read.csv('https://goo.gl/LQAyJ9')
names(data_voc)[4:8] <- c('a', 'e', 'i', 'o', 'u')
data_voc <- gather(data_voc, key=vowel, value=length, a, e, i, o, u)
library(tidyverse)
ggplot(data_voc, aes(x=ID, y=a, fill=vowel)) +
geom_point(aes(x = ID, y = length, fill = vowel, shape = vowel), size = 3, show.legend=FALSE) +
scale_shape_identity() +
labs(title='Length of the vocal tract for each speaker',
x='speakers', y='length of the vocal tract') +
theme_bw()
ggplot(data_voc, aes(x=ID, y=length, fill=vowel)) +
geom_point(aes(x = ID, y = length, fill = vowel, shape = vowel), size = 3, show.legend=FALSE) +
scale_shape_identity() +
labs(title='Length of the vocal tract for each speaker',
x='speakers', y='length of the vocal tract') +
theme_bw()
library(tidyverse)
data_vel = read.csv('http://goo.gl/aE3yVg')
# Задание 1.1
ggplot(data_vel, aes(v.elision, fill = position)) +
geom_bar(stat='count', position=position_dodge()) +
labs(title='Correlation between [v] elision and phrasal position',
x='[v] elision', y='phrasal position')
# Задание 1.2
df_vel <- data_vel %>% group_by(v.elision, position) %>%  summarise(number = n())
numbers <- df_vel[,3]$number
names <- sapply(numbers, as.character)
ggplot(df_vel, aes(v.elision, position, size=numbers, label=names, legend=FALSE)) +
geom_point(color='lightblue', show.legend=FALSE) + scale_size(range = c(10, 30)) +
labs(title='Correlation between [v] elision and phrasal position', x='[v] elision', y='phrasal position') +
geom_text(aes(label=names), size=4)
# Задание 1.3
# чувс
# Задание 1.4 - тут subtitle не работает
filter(data_vel, group=='third', position=='strong') %>% ggplot(aes(x = v.elision, fill = word)) +
geom_bar(stat='count', position=position_dodge()) +
labs(title='The correlation between [v] elision and the root',
subtitle = 'Strong phrasal position, Third group',
x='[v] elision', y='number of cases')
# Задание 2.1
data_voc <- read.csv('https://goo.gl/LQAyJ9')
d <- gather(data_voc, key = vowel, value = length, a.vtl, e.vtl, i.vtl, o.vtl, u.vtl)
d <- d[,c(1, 5, 6)]
xtick <- c('a', 'e', 'i', 'o', 'u')
ggplot(d, aes(vowel, length)) +
geom_boxplot() +
labs(title='Correlation between the length of the ocal tract and the vowel type',
x='vowel type', y='length of vocal tract') +
geom_hline(aes(yintercept=mean(d$length)), linetype='dashed') +
scale_x_discrete(labels = xtick)
# Задание 2.2 - trim не полностью работает
ggplot(d, aes(vowel, length)) +
geom_violin(trim=FALSE, fill = 'lightblue', color = 'lightblue') +
geom_point(aes(shape="—"), size=5) + scale_shape_identity() +
labs(title='Correlation between the length of the ocal tract and the vowel type',
x='vowel type', y='length of vocal tract') + scale_x_discrete(labels = xtick)
# Задание 2.3
# http://www.cookbook-r.com/Manipulating_data/Summarizing_data/
mtcars %>% ggplot(aes(mpg, qsec)) +
geom_point(data=mtcars[,-2], aes(mpg, qsec), size=4, color='grey') +
geom_point(size=4, aes(factor=cyl)) +
facet_wrap(~cyl)
# binwidth=nclass.FD(d$length)
d %>% ggplot(aes(length))+
geom_histogram(data=d[,-2], aes(length), binwidth=0.57, color="grey")+
geom_histogram(aes(fill=vowel), binwidth=0.57)+
facet_wrap(~vowel)
# Задание 2.4
# [Sturges 1926] and [Freedman, Diaconis 1981]
# Задание 2.5
ggplot(d, aes(x = ID, y = a, fill = vowel)) +
geom_point(aes(x = ID, y = length, fill = vowel, shape = vowel), size = 5) +
scale_shape_identity() +
ggtitle("Length of the vocal tract for each speaker") +
xlab("speakers") + ylab("length of the vocal tract") +
theme(legend.position="none")
d
ggplot(d, aes(x = ID, y = length, fill = vowel)) +
geom_point(aes(x = ID, y = length, fill = vowel, shape = vowel), size = 5) +
scale_shape_identity() +
ggtitle("Length of the vocal tract for each speaker") +
xlab("speakers") + ylab("length of the vocal tract") +
theme(legend.position="none")
ggplot(d, aes(x = ID, y = length, fill = vowel)) +
geom_point(aes(x = ID, y = length, fill = vowel, shape = vowel), size = 5) +
scale_shape_identity() +
ggtitle("Length of the vocal tract for each speaker") +
xlab("speakers") + ylab("length of the vocal tract") +
theme(legend.position="none")
m <- matrix(c(5485,8318,15913,8259),ncol=2,byrow=TRUE)
m
m <- matrix(c(5485,8318,15913,8259),ncol=2,byrow=TRUE)
colnames(m) <- c("First","Second")
rownames(m) <- c("Before","After")
m
m <- matrix(c(5485,8318,15913,8259),ncol=2,byrow=TRUE)
colnames(m) <- c("Before","After")
rownames(m) <- c("First","Second")
m
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
M
(Xsq <- chisq.test(M))
(Xsq <- chisq.test(m))
rus <- read.csv('http://goo.gl/KljqjU')
pol <- read.csv('http://goo.gl/xNozm2')
rus
rus %>%
group_by(prep, case)
library(tidyverse)
rus %>% group_by(prep, case)
rus %>% summarise()
rus %>% summarise(prep, case, count=n())
rus %>% summarise(prep, count=n())
rus %>% summarise(prep, count=n())
rus %>% summarise(prep, acc=count(acc))
rus %>% summarise(prep=prep, acc=count(acc))
rus %>% summarise(prep, acc=count(acc))
summary(rus)
table(rus)
(Xsq <- chisq.test(table(rus)))
(Xsq <- chisq.test(table(pol)))
table(pol)
(Xsq <- chisq.test(table(pol))$expected)
(Xsq <- chisq.test(table(pol))$expected>5)
(Fish <- fisher.test(table(pol)))
m <- matrix(c(11, 30, 5, 511, 59, 576, 0, 8, 2, 58), ncol=2,byrow=TRUE)
m
m <- matrix(c(11, 30, 5, 511, 59, 576, 0, 8, 2, 58), ncol=2,byrow=TRUE)
colnames(m) <- c("Student","WALS")
rownames(m) <- c("No adpositions","Prepositions", 'Postpositions', 'Inpositions', 'No dominant order')
m
(Xsq <- chisq.test(table(m))$expected>5)
(Xsq <- chisq.test(m)$expected>5)
(Fish <- fisher.test(m))
head(data)
data <- read.csv("http://goo.gl/txmyO9", sep = "\t")
head(data)
data <- data[, -1]
data
cor(data)
cor(data, method="spearman")
cor(data, method="kendall")
install.packages("lme4")
install.packages("lintypology")
install.packages('devtools')
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'rocknroll')
install.packages("lintypology")
install.packages("lme4")
install.packages("lintypology")
lapsyd <- read.csv("https://goo.gl/eD4S5n")
library(lme4)
lapsyd <- read.csv("https://goo.gl/eD4S5n")
View(lapsyd)
map.feature(lapsyd$name, features = lapsyd$area)
model1<-lm(count_vowel~count_consonant, lapsyd)
summary(model1)
count_vowel = 7.38236 + 0.04065*count_consonant
model1<-lm(count_vowel~count_consonant, lapsyd)
View(lapsyd)
summary(model1)
count_vowel = 7.38236 + 0.04065*count_consonant
ggplot(fit1) + geom_point() + geom_line(aes(count_consonant, model1))
library(tidyverse)
install.packages("tidyverse")
model2 <- lmer(count_vowel~count_consonant + (1 | area), lapsyd)
summary(model2)
fit1 <- model1
lapsyd$model1 <- predict(fit1)
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(), color = "lightblue") +
geom_line(aes(count_consonant, model1))
install.packages("tidyverse")
library(tidyverse)
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(), color = "lightblue") +
geom_line(aes(count_consonant, model1))
summary(model2)
lapsyd$model2 <- predict(fit2)
fit2 <- model2
lapsyd$model2 <- predict(fit2)
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(), color = "lightblue") +
geom_line(aes(count_consonant, model2, color = area))
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes()) +
geom_line(aes(count_consonant, model2, color = area))
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(), color = area) +
geom_line(aes(count_consonant, model2, color = area))
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(), color = model2$area) +
geom_line(aes(count_consonant, model2, color = area))
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(color = area)) +
geom_line(aes(count_consonant, model2, color = area))
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(color = area)) +
geom_line(aes(count_consonant, model2, color = area))
model3 <- lmer(dependent_variable~fixed_effect_variables +
(1+fixed_effect_variables | random_effect_variables),
data = your_dataframe)
model3 <- lmer(dependent_variable~fixed_effect_variables +
(1+fixed_effect_variables | random_effect_variables),
lapsyd)
View(lapsyd)
model3 <- lmer(count_vowel~count_consonant +
(1+count_consonant | area),
lapsyd)
summary(model3)
fit3 <- model3
lapsyd$model3 <- predict(fit3)
lapsyd %>%
ggplot(aes(count_consonant, count_vowel)) +
geom_point( aes(color = area)) +
geom_line(aes(count_consonant, model3, color = area))
model4 <- lmer(count_vowel~count_consonant
+ (0+count_consonant | area),
lapsyd)
library(tidyverse)
data = read.csv('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Calculating_stuff_in_plays/num_of_stuff_in_plays.csv')
View(data)
View(data)
gplot(data, aes(Num_of_char~Year_of_creation))
ggplot(data, aes(Num_of_char~Year_of_creation))
plot(data)
plot(data$Num_of_char, data$Year_of_creation)
plot(data$Year_of_creation, data$Num_of_char)
abline()
abline(data$Year_of_creation~data$Num_of_char)
plot(data$Year_of_creation, data$Num_of_char)
abline(data$Year_of_creation~data$Num_of_char)
plot(data$Year_of_creation, data$Num_of_char)
abline(dlm(ata$Year_of_creation~data$Num_of_char))
plot(data$Year_of_creation, data$Num_of_char)
abline(lm(ata$Year_of_creation~data$Num_of_char))
plot(data$Year_of_creation, data$Num_of_char)
abline(lm(data$Year_of_creation~data$Num_of_char))
plot(data$Year_of_creation, data$Num_of_char)
abline(lm(data$Num_of_char~data$Year_of_creation))
plot(data$Year_of_creation, data$Num_of_char)
abline(data$Num_of_char~data$Year_of_creation)
plot(data$Year_of_creation, data$Num_of_char)
abline(lm(data$Num_of_char~data$Year_of_creation))
install.packages('network')
install.packages('sna')
library(network)
library(sna)
setwd('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Calculating_stuff_in_plays')
boris_godunov = read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', stringsAsFactors=FALSE)
head(boris_godunov)
boris_godunov = read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', stringsAsFactors=FALSE,  sep = ";")
head(boris_godunov)
net = network(boris_godunov, directed=FALSE)
ggnet2(net, alpha = 0.75, size = 4, edge.alpha = 0.5)
install.packages("GGally")
library(GGally)
ggnet2(net, alpha = 0.75, size = 4, edge.alpha = 0.5)
boris_godunov
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(aes(color=Source))
library(tidyverse)
library(plotly)
library(plotrix)
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(aes(color=Source))
library(tidyverse)
library(plotly)
library(plotrix)
library(network)
library(sna)
library(GGally)
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(aes(color=Source))
if (!require(geomnet, quietly = TRUE) ||
packageVersion("geomnet") < "0.2.0") {
getFromNamespace("install_github", asNamespace("devtools"))("sctyner/geomnet")
}
if (!require(ggnetwork, quietly = TRUE) ||
packageVersion("ggnetwork") < "0.5.1") {
getFromNamespace("install_github", asNamespace("devtools"))("briatte/ggnetwork")
}
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(aes(color=Source))
install.packages('geomnet')
install.packages('ggnetwork')
library(geomnet)
library(ggnetwork)
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(aes(color=Source))
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net()
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(layout.alg = "kamadakawai",
size = 2, labelon = TRUE, vjust = -0.6, ecolour = "grey60",
directed =FALSE, fontsize = 3, ealpha = 0.5))
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(layout.alg = "kamadakawai",
size = 2, labelon = TRUE, vjust = -0.6, ecolour = "grey60",
directed =FALSE, fontsize = 3, ealpha = 0.5)
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(layout.alg = "kamadakawai",
size = 5, labelon = TRUE, vjust = -0.6, ecolour = "grey60",
directed =FALSE, fontsize = 3, ealpha = 0.5)
data(blood)
blood
boris_godunov <- boris_godunov[, c(1, 3, 4)]
boris_godunov
install.packages('igraph')
net <- graph_from_data_frame(d=boris_godunov, directed=F)
library(igraph)
net <- graph_from_data_frame(d=boris_godunov, directed=F)
net
net <- graph_from_data_frame(d=boris_godunov, directed=T)
net
net <- graph_from_data_frame(d=boris_godunov, directed=F)
net
class(net)
E(net)
V(net)
plot(net, edge.arrow.size=.4,vertex.label=NA)
as_adjacency_matrix(net, attr="weight")
as_adjacency_matrix(net, attr="Weight")
plot(net, edge.arrow.size=.4,vertex.label=NA)
net <- as_adjacency_matrix(net, attr="Weight")
plot(net, edge.arrow.size=.4,vertex.label=NA)
net2 <- graph_from_incidence_matrix(as_adjacency_matrix(net, attr="Weight"))
net2 <- graph_from_adjacency_matrix(as_adjacency_matrix(net, attr="Weight"))
E(net)
net <- graph_from_data_frame(d=boris_godunov, directed=F)
E(net)
boris_godunov <- read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', stringsAsFactors=FALSE,  sep = ";")
boris_godunov <- boris_godunov[, c(1, 3, 4)]
boris_godunov
net <- graph_from_data_frame(d=boris_godunov, directed=F)
class(net)
E(net)
E(net)$weight = boris_godunov$weight
E(net)
boris_godunov$weight
net <- graph_from_data_frame(d=boris_godunov, directed=F, weight=weight)
```{r results='hide', warning=FALSE, message=FALSE}
library(tidyverse)
library(plotly)
library(plotrix)
library(network)
library(sna)
library(GGally)
library(geomnet)
library(ggnetwork)
library(igraph)
setwd('/Users/IrinaPavlova/Desktop/Uni/Бакалавриат/2015-2016/Programming/github desktop/RusDraCor/Calculating_stuff_in_plays')
data = read.csv('calculations.csv', stringsAsFactors=FALSE)
data = data.frame(data)
data[data=="empty weights"] <- 0
data[, 5:6] <- sapply(data[, 5:6], as.numeric)
data
```
### This graph shows how the number of characters in plays was changing from 1750 to 1950. The observations are the mean number of characters in plays of a particular year.
```{r}
char_data <- aggregate(data[, 4], list(Year_of_creation=data$Year_of_creation), mean)
BG <- subset(char_data, Year_of_creation == "1825")
char_data %>% ggplot(aes(Year_of_creation, x)) +
geom_point() +
geom_line() + scale_x_continuous(breaks=seq(1700, 1950, 50)) +
geom_text(data=BG, label="Boris Godunov", vjust=1) +
labs(title='Number of characters in Russian drama',
x='Number of characters', y='Year of creation')
```
### This graph shows how the number of scenes/acts in plays was changing from 1750 to 1950. The observations are the mean number of scenes/acts in plays of a particular year.
```{r}
scenes_data <- aggregate(data[, 3], list(Year_of_creation=data$Year_of_creation), mean)
scenes_data %>% ggplot(aes(Year_of_creation, x)) +
geom_point() +
geom_line() + scale_x_continuous(breaks=seq(1700, 1950, 50)) +
labs(title='Number of scenes/acts in Russian drama',
x='Number of scenes/acts', y='Year of creation')
```
### This graph shows how the maximum degree of a character in plays was changing from 1750 to 1950. The observations are the mean number of max degree in plays of a particular year.
```{r}
degree_data <- aggregate(data[, 6], list(Year_of_creation=data$Year_of_creation), mean)
BG <- subset(degree_data, Year_of_creation == "1825")
degree_data %>% ggplot(aes(Year_of_creation, x)) +
geom_point() +
geom_line() + scale_x_continuous(breaks=seq(1700, 1950, 50)) +
geom_text(data=BG, label="Boris Godunov") +
labs(title='Max character degree in Russian drama',
x='Max degree', y='Year of creation')
```
### Making network visualization
```{r}
boris_godunov <- read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', sep = ";")
boris_godunov <- boris_godunov[, c(1, 3, 4)]
boris_godunov
net <- graph_from_data_frame(d=boris_godunov, directed=F)
class(net)
E(net)$weight = boris_godunov$weight
E(net)
plot(net, edge.arrow.size=.4,vertex.label=NA)
as_adjacency_matrix(net, attr="Weight")
# net = network(boris_godunov, directed=FALSE)
# ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(layout.alg = "kamadakawai",
# size = 2, labelon = TRUE, vjust = -0.6, ecolour = "grey60",
# directed =FALSE, fontsize = 3, ealpha = 0.5)
boris_godunov <- read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', sep = ";")
boris_godunov <- boris_godunov[, c(1, 3, 4)]
head(boris_godunov)
net <- graph_from_data_frame(d=boris_godunov, directed=F)
class(net)
E(net)$weight = boris_godunov$weight
E(net)
plot(net, edge.arrow.size=.4,vertex.label=NA)
net = network(boris_godunov, directed=FALSE)
net <- network(boris_godunov, directed=FALSE)
ggplot(data = boris_godunov, aes(from_id=Source, to_id=Target)) + geom_net(layout.alg = "kamadakawai",
# size = 2, labelon = TRUE, vjust = -0.6, ecolour = "grey60",
E(net)$weight
E(net)
E(net)$weight
E(net)
boris_godunov <- read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', sep = ";")
boris_godunov <- boris_godunov[, c(1, 3, 4)]
head(boris_godunov)
net <- graph_from_data_frame(d=boris_godunov, directed=F)
class(net)
E(net)
E(net)$weight
E(net)
E(net)$vericies
plot(net, edge.arrow.size=.2,vertex.label=V(net))
V(net)
plot(net, edge.arrow.size=.6, vertex.label=V(net))
V(net)[,1]
V(net)$name
plot(net, edge.arrow.size=.6, vertex.label=V(net)$name)
plot(net, edge.arrow.size=.6, vertex.label=V(net)$name, edge.width=E(net)$weight)
boris_godunov <- read.csv('ready_CSV/Pushkin_-_Boris_Godunov.csv', sep = ";")
boris_godunov <- boris_godunov[, c(1, 3, 4)]
head(boris_godunov)
net <- graph_from_data_frame(d=boris_godunov, directed=F)
class(net)
E(net)$weight
E(net)$weight <- net$Weight
E(net)$weight <- boris_godunov$Weight
E(net)$weight
plot(net,
vertex.size=1
edge.arrow.size=.6,
vertex.label=V(net)$name,
edge.color="black",
edge.width=E(net)$weight)
plot(net,
vertex.size=1,
edge.arrow.size=.6,
vertex.label=V(net)$name,
edge.color="black",
edge.width=E(net)$weight)
plot(net,
vertex.size=3,
edge.arrow.size=.6,
vertex.label=V(net)$name,
edge.color="black",
edge.width=E(net)$weight)
plot(net,
vertex.size=3,
edge.arrow.size=.6,
vertex.label=V(net)$name,
edge.color=Source,
edge.width=E(net)$weight)
clust=cluster_optimal(net)
clust
plot(net,
vertex.size=3,
edge.arrow.size=.6,
vertex.label=V(net)$name,
edge.color=Source,
edge.width=E(net)$weight)
plot(net,
vertex.size=3,
edge.arrow.size=.6,
vertex.label=V(net)$name,
edge.width=E(net)$weight)
